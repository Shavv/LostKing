<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hnet_connect("localhost", 8033);

//Sends player name to server when player makes connection
hnet_profile_create(6, -1);
hnet_profile_add(6, h_default, h_string);
hnet_profile_add(6, h_default, h_byte);

//Creates object other with id, name, x, y
hnet_profile_create(7, -1);
hnet_profile_add(7, h_default, h_byte16);
hnet_profile_add(7, h_default, h_string);
hnet_profile_add(7, h_default, h_byte16);
hnet_profile_add(7, h_default, h_byte16);

//Player logs out, destory object other
hnet_profile_create(8, -1);
hnet_profile_add(8, h_default, h_byte16);
hnet_profile_add(8, h_default, h_byte);

//Updates x and y positions for player with id, x, y
hnet_profile_create(9, -1);
hnet_profile_add(9, h_default, h_byte16);//Id
hnet_profile_add(9, h_default, h_byte16);//X
hnet_profile_add(9, h_default, h_byte16);//Y
hnet_profile_add(9, h_default, h_byte);//Image_angle
hnet_profile_add(9, h_default, h_byte);//Image_xscale
hnet_profile_add(9, h_default, h_byte);//Image_yscale
hnet_profile_add(9, h_default, h_byte16);//Image_index
hnet_profile_add(9, h_default, h_byte16);//Hp

//C&gt;S Drag item
hnet_profile_create(30, -1);
hnet_profile_add(30, h_default, h_byte);//Origin index
hnet_profile_add(30, h_default, h_byte);//Destination index

//C&gt;S Drag item_single
hnet_profile_create(31, -1);
hnet_profile_add(31, h_default, h_byte);//Origin index
hnet_profile_add(31, h_default, h_byte);//Destination index

//S&gt;C Update inventory item
hnet_profile_create(40, -1);
hnet_profile_add(40, h_default, h_byte);//Inventory index
hnet_profile_add(40, h_default, h_byte);//Item index
hnet_profile_add(40, h_default, h_byte16);//Slot amount


var name = "test";

//Send name, login message
hnet_message_start(6);
hnet_write_string(name);
hnet_write_byte(7);
hnet_message_send();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hnet_receive_message(amp_receive);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
