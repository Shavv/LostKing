<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_human_male</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_human_male_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation and slots
skeleton_attachment_set("LeftHand",-1)
skeleton_attachment_set("RightHand",-1)
skeleton_attachment_set("BodyArmor",-1)
skeleton_attachment_set("ArmArmor",-1)
skeleton_attachment_set("LowerArmArmor",-1)
skeleton_attachment_set("BackArmArmor",-1)
skeleton_attachment_set("LowerBackArmArmor",-1)
skeleton_attachment_set("BackLegArmor",-1)
skeleton_attachment_set("LowerBackLegArmor",-1)
skeleton_attachment_set("BackFootArmor",-1)
skeleton_attachment_set("LegArmor",-1)
skeleton_attachment_set("LowerLegArmor",-1)
skeleton_attachment_set("FootArmor",-1)



///animation
skeleton_animation_mix("Idle","Walk",0.3)
skeleton_animation_mix("Walk","Idle",0.3)
skeleton_animation_mix("Run","Idle",0.3)
skeleton_animation_set("Idle")
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
state=0
race="human"
gender="female"
movespeed=2
target=noone
target_x=x
target_y=y
hor=0
ver=0
scale=1
movestate="Run"
keydir="none"
//image

//appearance


//equipment
chest=""
boots=""
head=""
legs=""
hands=""
hands_sprite=""



///other
image_xscale=scale
image_yscale=scale

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///target_timer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sprinting timer
keydir="none"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hnet variables
//Update X &amp; Y
hnet_message_start(9);
hnet_write_byte16(-1);//The ID has to be here in te future, not important right now
hnet_write_byte16(x);
hnet_write_byte16(y);
hnet_write_byte(0);
hnet_write_byte(image_xscale);
hnet_write_byte(image_yscale);
hnet_write_byte16(image_index);
hnet_write_byte16(0*100);
hnet_message_send();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse: movement / sprite
if state=0
{
 if distance_to_point(target_x,target_y)&gt;3
 {
  if movestate="Run" {mspeed=movespeed}
  if movestate="Walk"{mspeed=movespeed/3}
  mp_potential_settings(90,1,60,false)
  mp_potential_step(target_x,target_y,mspeed,false)
 }

 

 //mouse click 
 if global.mouse_ui=0
 {
  if world_mouse_check_right() and alarm[11]=-1
  {
   if point_distance(x,y,mouse_x,mouse_y)&gt;5
   {
    target_x=mouse_x
    target_y=mouse_y
   }
  }
 } 
 //sprite
 if round(x)&lt;round(xprevious) {image_xscale=-scale}
 if round(x)&gt;round(xprevious) {image_xscale= scale}
 
 spd = point_distance(xprevious,yprevious,x,y)
 if spd=0 
 {
  {
   if skeleton_animation_get()!="Idle"
   {
    skeleton_animation_set("Idle")
   }
   image_speed=1
  }
 }
  else
 {
  if skeleton_animation_get()!=movestate
  {
   skeleton_animation_set(movestate)
  }
  image_speed=1.2
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables
depth=-y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_target">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move outside
if state!=1
{
 if place_free(x,y) {move_outside_all(point_direction(other.x,other.y,x,y),1)}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move outside
if state!=1
{
 if place_free(x,y) {move_outside_all(point_direction(other.x,other.y,x,y),1)}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,make_colour_rgb(255,212,178),image_alpha)
/*
draw_text(x,y+3,skeleton_animation_get())
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
